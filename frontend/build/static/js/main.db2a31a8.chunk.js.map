{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","components/Header.js","components/Footer.js","components/Product.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","actions/productActions.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productReducer","product","cart","cartItems","item","existItem","find","x","map","filter","initialState","localStorage","getItem","JSON","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Header","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","Link","Footer","Row","Col","Product","Card","_id","Img","src","image","Body","Title","as","name","Text","price","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","HomeScreen","dispatch","useDispatch","useSelector","useEffect","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","productDetails","params","Image","alt","fluid","ListGroup","Item","description","countInStock","Form","Control","value","onChange","e","target","Array","keys","Button","onClick","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","App","path","element","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.db2a31a8.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = \"PRODUCT_LIST_REQUEST\";\nexport const PRODUCT_LIST_SUCCESS = \"PRODUCT_LIST_SUCCESS\";\nexport const PRODUCT_LIST_FAIL = \"PRODUCT_LIST_FAIL\";\n\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\";\nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\";\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\";\n","export const CART_ADD_ITEM = \"CART_ADD_ITEM\";\nexport const CART_REMOVE_ITEM = \"CART_REMOVE_ITEM\";\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport {\n  productListReducer,\n  productDetailsReducer,\n} from \"./reducers/productReducers\";\nimport { cartReducer } from \"./reducers/cartReducers\";\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productReducer: productDetailsReducer,\n  cart: cartReducer,\n});\n\nconst cartItemsFromStorage = localStorage.getItem(\"cartItems\")\n  ? JSON.parse(localStorage.getItem(\"cartItems\"))\n  : [];\n\nconst initialState = {\n  cart: { cartItems: cartItemsFromStorage },\n};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n} from \"../constants/productConstants\";\n\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] };\n    case PRODUCT_LIST_SUCCESS:\n      return { loading: false, products: action.payload };\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { loading: true, ...state };\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload };\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nexport const cartReducer = (state = { cartItems: [] }, action) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n\n      const existItem = state.cartItems.find((x) => x.product === item.product);\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        };\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        };\n      }\n\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <LinkContainer to=\"/\">\n            <Navbar.Brand>Dev-Drip</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                <i className=\"fas fa-shopping-cart\"></i> Cart\n              </Nav.Link>\n              </LinkContainer>\n              \n              <LinkContainer to=\"/login\">\n               <Nav.Link>\n                <i className=\"fas fa-user\"></i> Sign In\n              </Nav.Link> \n              </LinkContainer>\n              \n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className=\"text-center py-3\">Copyright &copy; Dev-Drip</Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"react-bootstrap\";\n\nconst Product = ({ product }) => {\n  return (\n    <Card className=\"my-3 p-3 rounded\">\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant=\"top\" />\n      </Link>\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as=\"div\">\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n        <Card.Text as=\"h3\">${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default Product;\n","import React from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nconst Message = (variant, children) => {\n  return <Alert variant={variant}>[children]</Alert>;\n};\n\nMessage.defaultProps = {\n  variant: \"info\",\n};\n\nexport default Message;\n","import React from \"react\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation=\"border\"\n      role=\"status\"\n      style={{\n        width: \"100px\",\n        height: \"100px\",\n        margin: \"auto\",\n        display: \"block\",\n      }}\n    >\n      <span className=\"sr-only\">Loading</span>\n    </Spinner>\n  );\n};\n\nexport default Loader;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport Product from \"../components/Product\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProducts } from \"../actions/productActions\";\n\nconst HomeScreen = () => {\n  const dispatch = useDispatch();\n\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Latest Products</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          {products.map((product) => (\n            <Col sm={12} md={6} lg={4} xl={3}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","import axios from \"axios\";\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_REQUEST,\n} from \"../constants/productConstants\";\n\n\n\nexport const listProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST });\n\n    const { data } = await axios.get(\"/api/products\");\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`/api/products/${id}`);\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Form,\n} from \"react-bootstrap\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { listProductDetails } from \"../actions/productActions\";\n\n// match cannot be used anymore, gotta change this :( )\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n\n  // Fetching a Single Product\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return (\n    <>\n      <Link className=\"btn btn-dark my-3\" to=\"/\">\n        Go Back to Home\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6}>\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>Price:${product.price}</ListGroup.Item>\n              <ListGroup.Item>Description:{product.description}</ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price</Col>\n                    <Col>${product.price}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Stock:</Col>\n                    <Col>\n                      {product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"}\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock > 0 && (\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Qty</Col>\n                      <Col>\n                        <Form.Control\n                          as=\"select\"\n                          value={qty}\n                          onChange={(e) => setQty(e.target.value)}\n                        >\n                          {[...Array(product.countInStock).keys()].map((x) => (\n                            <option key={x + 1} value={x + 1}>\n                              {x + 1}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n                )}\n\n                <ListGroup.Item>\n                  <Button\n                    onClick={addToCartHandler}\n                    className=\"btn-block\"\n                    type=\"button\"\n                    disabled={product.countInStock === 0}\n                  >\n                    Add To Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </>\n  );\n};\n\nexport default ProductScreen;\n","import axios from \"axios\";\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM } from \"../constants/cartConstants\";\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  });\n\n  localStorage.setItem(\"cartItems\", JSON.stringify(getState().cart.cartItems));\n};\n","import React, { useEffect } from \"react\";\nimport Message from \"../components/Message\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n} from \"react-bootstrap\";\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id;\n\n  const qty = location.search ? Number(location.search.split(\"=\")[1]) : 1;\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id));\n  };\n\n  const checkoutHandler = () => {\n    history.push(\"/login?redirect=shipping\");\n  };\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is currently empty.\n            <Link to=\"/\">Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant=\"flush\">\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}> ${item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as=\"select\"\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type=\"button\"\n                      variant=\"light\"\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className=\"fas fa-trash\"></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items{\" \"}\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <Button\n              type=\"button\"\n              className=\"btn-block\"\n              disabled={cartItems.length === 0}\n              onClick={checkoutHandler}\n            ></Button>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CartScreen;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from \"./screens/CartScreen\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className=\"py-3\">\n        <Container>\n          <Routes>\n            <Route path=\"/\" element={<HomeScreen />} />\n            <Route path=\"/product/:id\" element={<ProductScreen />} />\n            <Route path=\"/cart/:id?\" element={<CartScreen />} />\n          </Routes>\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nserviceWorker.unregister();\n"],"sourceRoot":""}